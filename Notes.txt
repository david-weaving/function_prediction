
6/15/24

There are two seperate models, one to handle floating point numbers and one to handle integers.
The model that handles integers will be used for polynomials and square waves
The model that handles floats will be used for square roots, logs, and exponentials. In the future it will most likely handle sine waves as well.
The models labeled combined were an attempt to combine both the models, for the time being, it did not go well -- the model interepreted everything as a quadratic. 

Version 1 of the model handles 4 inputs and 1 output, version 2 will handle 6 inputs and 1 output (for both integer and float models).


The integer model now takes 6 inputs and may need some further evaluation on either its model structure or batch size. Testing on batch size seems as if the model needs to be restructured.
I trained the model v2 (integer) to a good point. It handles quadratics and square waves extremely well. Linear functions are okay but eventually seen as quadratic.
I have hope this can be fixed through training on larger numbers.

In the meantime I created a seperate script dedicated to randomly generating numbers for linear, quadratic, and alternating.

I will train on additional data and figure out what happens from there.

I pushed the training data to a seperate file to clean things up.

The model is overfitting pretty badly and doing not great on unseen data.

I'm closing up for the day, so far the model needs readjusting and I might be getting somewhere, maybe more training time? The original model is currently there but it's been #'d
More data might be needed.

06/18/24

Must use tensorflow version 2.11.0 -- had an issue with importing models and went to upgrade tensorflow, did not work.

Integer model is still overfitting, it is possible the validation data may be too complex.

I am going to revaluate the whole system. Training data should have some continuation and then validation should have some
'inbetween':

training: [1,2,3,4,5,6] [7,8,9,10,11,12]
validation: [5,6,7,8,9,10]

Feeding in data very slowly seems to be key.

I'm slowly training and it seems to be almost bending into place.

The model is now working close to intended, I had to really drive home the difference between linear and quadratic,
I just kept sending in the same data multiple times and it seemed to work.

Start training on a new version (v2_4)

06/27/24

The entire project is going to go through a restructure. Instead of the model attempting to predict points, it will
instead predict what type of function it is.

Huge overall. We are now using an algorithm to precisely predict the function. The model, now named FELPS-P1.0, will predict the kind of function
(ex: polynomial) and return the degree (iff it's a polynomial)

Model will be worked on once the algorithms are ready.


Fix the incrementer (j) for moving 50 backwards, also adjust the view plot to see better


6/29/24

Need to work on STD function for bad points
Need to work on dynamic print function

7/1/24

Fix plotting by making the bounds more consistent. Do an aboslute value comparison of
the max and mins for both, take the highest and make those the bounds.

Use standard deviation for exp function, it's crucial to remove bad points

I've been making things way too hard: we just needed to average the points NOT every combination of points

7/5/24

Fixed the exponential function by allowing better initial guesses along with better guesses for decaying functions

Some fixes not noted here: Better graphing fix, combinations removed as well as averaging, math testing script created to mess around with math before implementation.

Will start on the next algorithm before creating the AI model.

The SINE algorithm is done, and works much better than the exponential algorithm, it handles noisy data fairly well

Starting on the model soon. Hopefully the website starting in a bit.

Two seperate models; one for predicting function type and the other for polynomial degree

7/6/24

using sklearn may be better than tensorflow

training is going well, predictions are fairly well iwth unseen data

the newest model is well, will test more points and start putting sines in soon